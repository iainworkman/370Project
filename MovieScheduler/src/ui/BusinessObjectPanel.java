/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;
import javax.swing.ImageIcon;
import businessobjects.BaseBusinessObject;
import businessobjects.BusinessObjectListener;

/**
 * A panel designed for providing a unified GUI that forms the basis of 
 * frames used to edit BusinessObjects. Automatically shows the errors associated
 * with the BusinessObject, and enables/disables the okay, apply and cancel
 * buttons when appropriate.
 */
public class BusinessObjectPanel extends javax.swing.JPanel implements
        BusinessObjectListener {

    /**
     * Creates new form BusinessObjectPanel and initializes it. By default
     * new BusinessObjectPanels have no associated BusinessObject. Call
     * setBusinessObject in order to have this panel manage the editing of a
     * BusinessObject.
     */
    public BusinessObjectPanel() {
        initComponents();
        businessObject = null;
        ImageIcon icon = new ImageIcon(getClass().getResource(
                "/resources/ErrorIcon.png"));
        errorLabel.setIcon(icon);
        errorLabel.setVisible(false);
        okayButton.setEnabled(false);
        applyButton.setEnabled(false);
    }
    
    /**
     * Returns the current BusinessObject this panel is displaying
     * @return The displayed BusinessObject
     */
    public BaseBusinessObject businessObject()
    {
        return businessObject;
    }

    /**
     * Sets the BusinessObject this panel will display
     * @param newBusinessObject::BaseBusinessObject ~ The BusinessObject to
     * display
     */
    public void setBusinessObject(BaseBusinessObject newBusinessObject)
            throws NullPointerException
    {
        if(newBusinessObject == null)
            throw new NullPointerException("Argument newBusinessObject in " +
            "method BusinessObjectPanel::setBusinessObject cannot be null.");
        
        if(businessObject != null)
            clearBusinessObject();
        businessObject = newBusinessObject;
        businessObject.addListener(this);
    }
    
    /**
     * Removes the currently displayed BusinessObject.
     */
    public void clearBusinessObject()
    {
        if(businessObject != null)
            businessObject.removeListener(this);
        businessObject = null;
    }
    
    /**
     * Method which handles being notified by the BusinessObject that its
     * hasChanged state has altered. If the hasChanged state is true, enables
     * the okay and apply buttons, if the hasChanged state is false, disables
     * the okay and apply buttons
     * @param changedState::boolean ~ The new hasChanged state of the 
     * BusinessObject
     */
    @Override
    public void changedStateAltered(boolean changedState)
    {
        okayButton.setEnabled(changedState);
        applyButton.setEnabled(changedState);
    }
    
    /**
     * Method which handles being notified by the BusinessObject that its
     * valid state has changed. If the validState is true, hides the 
     * errorLabel, if it is false then shows the errorLabel and sets its
     * tool tip to the full error message.
     * @param validState 
     */
    @Override
    public void validStateAltered(boolean validState)
    {
        errorLabel.setVisible(!validState);
        errorLabel.setToolTipText(businessObject.errorMessage());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bottomPanel = new javax.swing.JPanel();
        cancelButton = new javax.swing.JButton();
        applyButton = new javax.swing.JButton();
        okayButton = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        cancelButton.setText("Cancel");

        applyButton.setText("Apply");

        okayButton.setText("Okay");

        javax.swing.GroupLayout bottomPanelLayout = new javax.swing.GroupLayout(bottomPanel);
        bottomPanel.setLayout(bottomPanelLayout);
        bottomPanelLayout.setHorizontalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bottomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(errorLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 275, Short.MAX_VALUE)
                .addComponent(okayButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(applyButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelButton)
                .addContainerGap())
        );
        bottomPanelLayout.setVerticalGroup(
            bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(applyButton)
                    .addComponent(okayButton)
                    .addComponent(errorLabel))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bottomPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 252, Short.MAX_VALUE)
                .addComponent(bottomPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * The BusinessObject this panel is currently displaying
     */
    private BaseBusinessObject businessObject;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyButton;
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JButton okayButton;
    // End of variables declaration//GEN-END:variables
}
