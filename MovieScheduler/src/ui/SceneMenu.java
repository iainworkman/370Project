/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import businessobjects.BusinessObjectList;
import businessobjects.Equipment;
import businessobjects.Scene;
import businessobjects.Script;
import businessobjects.Volunteer;
import database.Database;
import java.awt.Frame;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;

/**
 *
 * @author ryan
 */
public class SceneMenu extends javax.swing.JDialog {

    /**
     * Creates new form SceneMenu
     */
    public SceneMenu(java.awt.Frame parent,Database database, Script script, Scene scene) throws CloneNotSupportedException {
        super(parent, true);
        this.parent = parent;
        this.database = database;
        this.script = script;
        if (scene != null)
        {
               clonedScene = (Scene) scene.clone();
        }
     
        initComponents();
        
        
        
                
       currentVolunteerList = clonedScene.volunteers();
       currentEquipmentList = clonedScene.equipment();
        
        
        availableVolunteerList = new BusinessObjectList<Volunteer>();
        availableVolunteerList.addAll(script.volunteers());
        availableEquipmentList = new BusinessObjectList<Equipment>();
        availableEquipmentList.addAll(script.equipment());
        
        //NOTE THE SCRIPT MUST NOT BE NULL
        /**Initialize availableVolunteers, availableEquipment, currentVolunteers, currentEquipment to have appropriate lists. 
         * 
         * 
         * 
         * availableVolunteers = new BusinessObjectListView(volunteerList);
         * availableVolunteersViewPane.setViewpointView(availableVolunteers);         //NOTE ALSO THAT THIS NAME MUST CHANGE WHEN DECLARED ELSEWHERE FROM DEFAULT
         * 
         * 
         * currentVolunteerViewPane.setViewpointView(currentVolunteers);
         * 
         
         * 
         * availableEquipment = new BusinessObjectListView(equipmentList);
         * availableEquipmentViewPane.setViewpointView(availableEquipment);
         * 
         * currentEquipment = new BusinessObjectListView(new BusinessObjectList<Equipment>());
         * currentEquipmentViewPane.setViewpointView(currentEquipment);
         */
        
        //Make all of the lists proper
        //That is, make sure the current lists have all of the volunteers and equipment currently in the scene
        //and ensure the available equipment and volunteer lists only have ones not listed in the scenes list.
        if (scene != null)
        {
            sceneNameField.setText(scene.name());
            sceneDescriptionField.setText(scene.description());
           
           if (scene.hasVolunteers())
           {
               Iterator<Volunteer> iter = scene.volunteerIterator();
               while (iter.hasNext())
               {
                   Volunteer volunteerToRemoveFromAvailable = iter.next();
                   availableVolunteerList.remove(volunteerToRemoveFromAvailable);
               }
           }
           
           if (scene.hasEquipment())
           {
               Iterator<Equipment> iter = scene.equipmentIterator();
               while (iter.hasNext())
               {
                   Equipment equipmentToRemoveFromAvailable = iter.next();
                   availableEquipmentList.remove(equipmentToRemoveFromAvailable);
               }
           }
        }
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        currentToAvailableEquipment = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        currentToAvailableVolunteerButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        availableToCurrentEquipmentButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        sceneNameField = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        sceneDescriptionField = new javax.swing.JTextArea();
        saveSceneButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        availableVolunteers = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        availableEquipment = new javax.swing.JList();
        jScrollPane3 = new javax.swing.JScrollPane();
        currentEquipment = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        currentVolunteers = new javax.swing.JList();
        cancelButton = new javax.swing.JButton();
        availableToCurrentVolunteerButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        currentToAvailableEquipment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Alarm-Arrow-Left-icon.png"))); // NOI18N
        currentToAvailableEquipment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currentToAvailableEquipmentActionPerformed(evt);
            }
        });

        jLabel3.setText("volunteers in scene");

        currentToAvailableVolunteerButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Alarm-Arrow-Left-icon.png"))); // NOI18N
        currentToAvailableVolunteerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                currentToAvailableVolunteerButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("equipment not in script");

        availableToCurrentEquipmentButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Alarm-Arrow-Right-icon.png"))); // NOI18N
        availableToCurrentEquipmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availableToCurrentEquipmentButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("equipment in scene");

        jLabel1.setText("Scene Name:");

        jLabel6.setText("Scene Description");

        sceneNameField.setText("jTextField1");

        sceneDescriptionField.setColumns(20);
        sceneDescriptionField.setRows(5);
        jScrollPane5.setViewportView(sceneDescriptionField);

        saveSceneButton.setText("savescene");
        saveSceneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveSceneButtonActionPerformed(evt);
            }
        });

        resetButton.setText("Refresh");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(availableVolunteers);

        availableEquipment.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(availableEquipment);

        currentEquipment.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(currentEquipment);

        currentVolunteers.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(currentVolunteers);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        availableToCurrentVolunteerButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Alarm-Arrow-Right-icon.png"))); // NOI18N
        availableToCurrentVolunteerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availableToCurrentVolunteerButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("volunteers not in scene");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sceneNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(cancelButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(resetButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(saveSceneButton))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                .addComponent(jScrollPane2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(currentToAvailableVolunteerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(availableToCurrentVolunteerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(currentToAvailableEquipment, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(availableToCurrentEquipmentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel5)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addComponent(jLabel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(currentToAvailableVolunteerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(availableToCurrentVolunteerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(currentToAvailableEquipment, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(availableToCurrentEquipmentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(sceneNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveSceneButton)
                    .addComponent(resetButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveSceneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveSceneButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveSceneButtonActionPerformed

    private void currentToAvailableVolunteerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currentToAvailableVolunteerButtonActionPerformed
       if (!currentVolunteers.isSelectionEmpty())
       {
           availableVolunteerList.addAll(currentVolunteers.getSelectedValuesList());
        currentVolunteerList.remove(currentVolunteers.getSelectedValuesList()); 
       }
       
    }//GEN-LAST:event_currentToAvailableVolunteerButtonActionPerformed

    private void availableToCurrentVolunteerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availableToCurrentVolunteerButtonActionPerformed
               if (!availableVolunteers.isSelectionEmpty())
               {
                   currentVolunteerList.addAll(availableVolunteers.getSelectedValuesList());
                   availableVolunteerList.remove(availableVolunteers.getSelectedValuesList());
               }
    }//GEN-LAST:event_availableToCurrentVolunteerButtonActionPerformed

    private void currentToAvailableEquipmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_currentToAvailableEquipmentActionPerformed
        if (!currentEquipment.isSelectionEmpty())
        {
            availableEquipmentList.addAll(currentEquipment.getSelectedValuesList());
            currentEquipmentList.remove(availableVolunteers.getSelectedValuesList());
        }
        
    }//GEN-LAST:event_currentToAvailableEquipmentActionPerformed

    private void availableToCurrentEquipmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availableToCurrentEquipmentButtonActionPerformed
        if (!availableEquipment.isSelectionEmpty())
        {
            currentEquipmentList.addAll(availableEquipment.getSelectedValuesList());
            availableEquipmentList.remove(availableEquipment.getSelectedValuesList());
        }
    }//GEN-LAST:event_availableToCurrentEquipmentButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.setVisible(false);
        if (this.getParent() != null)
        {
            this.getParent().setVisible(true);
        }
        else
        {
            System.exit(0);
        }
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        //May replace later with a more effecient way of doing this.
        this.setVisible(false);
        SceneMenu newSceneMenu;
        try 
        {
            newSceneMenu = new SceneMenu(parent, database, script, clonedScene);
        } 
        catch (CloneNotSupportedException ex)
        {
            throw new RuntimeException("Refresh of the SceneMenu failed.");
        }
        newSceneMenu.setVisible(true);
    }//GEN-LAST:event_resetButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SceneMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SceneMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SceneMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SceneMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run(){
                try {
                    SceneMenu dialog = new SceneMenu(new javax.swing.JFrame(), null, null, null);
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                } catch (CloneNotSupportedException ex) {
                    Logger.getLogger(SceneMenu.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    private Scene clonedScene;
    private Frame parent;
   private  Database database;
   private Script script;
    BusinessObjectList<Volunteer> currentVolunteerList;
    BusinessObjectList<Equipment> currentEquipmentList;
    BusinessObjectList<Volunteer> availableVolunteerList;
    BusinessObjectList<Equipment> availableEquipmentList;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList availableEquipment;
    private javax.swing.JButton availableToCurrentEquipmentButton;
    private javax.swing.JButton availableToCurrentVolunteerButton;
    private javax.swing.JList availableVolunteers;
    private javax.swing.JButton cancelButton;
    private javax.swing.JList currentEquipment;
    private javax.swing.JButton currentToAvailableEquipment;
    private javax.swing.JButton currentToAvailableVolunteerButton;
    private javax.swing.JList currentVolunteers;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton saveSceneButton;
    private javax.swing.JTextArea sceneDescriptionField;
    private javax.swing.JTextField sceneNameField;
    // End of variables declaration//GEN-END:variables
}
