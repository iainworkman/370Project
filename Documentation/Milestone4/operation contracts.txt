Operation Contracts for resolve conflict by email
Cross References: Use case: Resolving conflicts through emails
Operation: sendEmailtoVolunteer()
Preconditions:
- The volunteer emails exist
- there is a connection through which the emails can be sent
Post conditions:
- The Volunteers was been emailed and properly informed of the conflict.

Operation: getScript()
Cross Reference:
Use Case: Create Schedule
Preconditions: 
- A Script has been initialized for the system to manage
Postconditions:
- the Script that the system is managing was returned

Operation: getScriptSchedule()
Cross Reference:
Use Case: Create Schedule
Preconditions:
- A Script has been created for the system to manage
Postconditions:
- The schedule associated with the script was returned

Operation: createSceneFilmingDate()
Cross Reference:
Use Case: Create Schedule
Preconditions:
- A Script has been created for the system to manage
Postconditions:
- A SceneFilmingDate instance sfd was created
- timeInterval in sfd was initialized to NULL
- scene in sfd was initialized to NULL

Operation: getSceneByName(name)
Cross Reference:
Use Case: Create Schedule
Preconditions:
- A Script has been created for the system to manage
- The scene with the provided name exists in the Script
Postconditions:
- The Scene with the provided name was returned

Operation: setFilmingDateScene(scene)
Cross Reference:
Use Case: Create Schedule
Preconditions:
- The provided scene is not NULL
Postconditions:
- The filming date was associated with the provided scene

Operation: setTimeOfFilmingDate(interval)
Cross Reference:
Use Case: Create Schedule
Preconditions:
- The provided interval is not NULL
- The provided interval is valid (start time < end time)
Postconditions:
- The provided interval was associated with the FilmingDate

Operation: addFilmingDateToSchedule(filmingDate)
Cross Reference:
Use Case: Create Schedule
Preconditions:
- The provided filmingDate is not NULL
- The provided filmingDate is associated with a scene
- The provided filmingDate is associated with an interval
Postconditions:
- The provided filmingDate was associated with the schedule
- The valid state of the schedule was returned


operation contracts for creating and adding a volunteer
Operation: createNewVolunteer()
Cross Reference:
Use Case: Create Volunteer
Preconditions:
-There is a volunteer to create
-The volunteer form is open
-The provided email, name, and phone number are filled in correctly
PostConditions: 
-A new volunteer was created and added to the database
-The volunteer window was set invisible and disposed of properly

Operation: addAvailability()
Cross Reference:
Use Case: Create Volunteer
Preconditions:
-A volunteer has been previously created properly 
-The provided list of availabilities is not NULL
-The volunteer properly adds their availabilities to the list
PostConditions:
-A list of the volunteer availabilities was added to the volunteer in the database













Operation: Scene()
Cross Reference: Create a Scene.
Preconditions:
-A script has been initialized.
-The volunteers and equipment the producer 
wishes to add to the scene are already in the system.
postconditions:
-A new scene was initialized. 

Operation: addVolunteer(volunteer)
Cross Reference: Create a scene
preconditions: 
-The volunteer is not already associated with the scene.
-The volunteer must already be in the system.
postConditions: 
-The given volunteer was added to the list of necessary
volunteers to film the scene. 

Operation: addEquipment(equipment)
Cross Reference: Create a scene
preconditions
-The given equipment is not already associated with the scene.
-The equipment must exist in the system.
postconditions:
-The given equipment was added to the list of necessary equipment to film this scene.

Operation: removeVolunteer(volunteer)
Cross Reference: Create a scene
preconditions:
-The given volunteer is in the list of volunteers necessary to film this scene.
postconditions:
-The given volunteer was removed from the list of necessary volunteers.

Operation: removeEquipment(equipment)
Cross Reference: Create a scene
preconditions:
-The equipment must be in the list of equipment for the scene.
postconditions:
-The equipment was removed from the list of necessary equipment to film the scene.

Operation: setSceneName(name)
Cross Reference: Create a scene
preconditions: none
postconditions:
-The scene was named the given name.


operation contracts for logging into the volunteer availability application
Operation: sendUsernamePassword()
Cross references:
Use Case: Volunteer Logs in to the Volunteer Availability Application
Preconditions:
- The login menu is open
- The username and password fields are filled in correctly
Postconditions:
- The username and password are sent to be validated against the database
 
Operation: userValidated()
Cross references:
Use Case: Volunteer Logs in to the Volunteer Availability Application
Preconditions:
-The user's username and password have been tested against the database
Postconditions:
-The user was informed of their successfulness logging into the application.
 
Operation: sendVolunteerInfo(email)
Cross references:
Use Case: Volunteer Logs in to the Volunteer Availability Application
Preconditions:
-The user has been validated successfully into the application
Postconditions:
-The Volunteer with the associated email was returned
-The MainMenu was initialized and displayed with the associated Volunteer
-The LoginMenu was set to invisible and disposed of properly

